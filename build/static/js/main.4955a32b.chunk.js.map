{"version":3,"sources":["components/video-bg.jpg","components/video.js","components/videos.js","components/dragDrop.js","components/chat.js","components/draggable.js","components/home.js","components/first-page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Video","props","mutemic","e","stream","video","srcObject","getTracks","filter","track","kind","setState","prevState","enabled","mic","mutecamera","camera","state","videoVisible","this","videoStream","nextProps","console","log","videoType","videoTrack","getVideoTracks","length","onmute","videoMuted","onunmute","audioTrack","getAudioTracks","alert","muteControls","showMuteControls","onClick","style","cursor","padding","fontSize","color","class","frameStyle","id","muted","autoPlay","visibility","videoStyles","ref","Component","Videos","rVideo","muteTrack","selectedVideo","switchVideo","_video","rVideos","remoteStreams","NoOfRemoteStreams","_rVideos","map","index","backgroundColor","maxWidth","maxHeight","borderRadius","float","margin","objectFit","width","height","name","display","key","zIndex","position","bottom","minWidth","minHeight","top","right","left","overflowX","whiteSpace","DragDrop","useState","bgColor","setBgColor","changeBgColor","className","onDragEnter","preventDefault","stopPropagation","dataTransfer","dropEffect","items","onDragLeave","onDragOver","onDrop","files","sendFiles","children","Chat","message","setMessage","uid","user","setUser","imageZoom","setImageZoom","selectedImage","setSelectedImage","scrollToBottom","chat","document","getElementById","scrollTop","scrollHeight","useEffect","data","sendMessage","msg","renderMessage","userType","msgDiv","type","sender","text","src","marginLeft","marginRight","messages","reader","FileReader","onload","target","result","readAsDataURL","onSubmit","event","placeholder","onChange","value","Draggable","pressed","setPressed","x","y","setPosition","useRef","current","transform","onMouseMove","movementX","movementY","onMouseDown","onMouseUp","Home","getLocalStream","navigator","mediaDevices","getUserMedia","audio","options","mirror","then","window","localStream","whoisOnline","catch","sendToPeer","local","socket","messageType","payload","socketID","emit","createPeerConnection","callback","pc","RTCPeerConnection","pc_config","peerConnections","onicecandidate","candidate","remote","oniceconnectionstatechange","ontrack","_remoteStream","remoteVideo","addTrack","_remoteVideo","MediaStream","remoteStream","close","forEach","componentDidMount","io","connect","serviceIP","path","query","room","location","pathname","on","status","peerCount","stopTracks","handleSendChannelStatusChange","sendChannels","readyState","sendChannel","createDataChannel","onopen","onclose","handleReceiveMessage","JSON","parse","handleReceiveChannelStatusChange","receiveChannel","ondatachannel","channel","onmessage","createOffer","sdpConstraints","sdp","setLocalDescription","addStream","setRemoteDescription","RTCSessionDescription","createAnswer","addIceCandidate","RTCIceCandidate","disconnectSocket","socketToDisconnect","stop","iceServers","urls","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","disconnected","Object","values","history","push","statusText","IconButton","confirm","send","stringify","FirstPage","on_click","overflow","backgroundSize","backgroundRepeat","require","alt","Button","variant","size","startIcon","App","exact","component","Boolean","hostname","match","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4955a32b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/video-bg.56248c52.jpg\";","import React, { Component } from 'react';\n\nclass Video extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mic: true,\n      camera: true,\n      videoVisible: true,\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.videoStream) {\n      this.video.srcObject = this.props.videoStream\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n\n    console.log('1', this.props.videoType, nextProps.videoStream)\n\n    if (nextProps.videoStream && nextProps.videoStream !== this.props.videoStream) {\n    // if (!this.props.videoStream) {\n      console.log('2', this.props.videoType, nextProps.videoStream)\n      this.video.srcObject = nextProps.videoStream\n    }\n\n    const videoTrack = nextProps.videoStream && nextProps.videoStream.getVideoTracks()\n    if (this.props.videoType === 'remoteVideo' && videoTrack && videoTrack.length) {\n\n      videoTrack[0].onmute = () => {\n        // alert('muted')\n        this.setState({\n          videoVisible: false,\n        })\n        this.props.videoMuted(nextProps.videoStream)\n      }\n\n      videoTrack[0].onunmute = () => {\n        this.setState({\n          videoVisible: true,\n        })\n        this.props.videoMuted(nextProps.videoStream)\n      }\n    }\n\n\n    const audioTrack = nextProps.videoStream && nextProps.videoStream.getAudioTracks()\n    if (this.props.videoType === 'remoteVideo' && audioTrack && audioTrack.length) {\n      audioTrack[0].onmute = () => {\n        alert('muted')\n      }\n    }\n\n  }\n\n  mutemic = (e) => {\n    const stream = this.video.srcObject.getTracks().filter(track => track.kind === 'audio')\n    this.setState(prevState => {\n      if (stream) stream[0].enabled = !prevState.mic\n      return {mic: !prevState.mic}\n    })\n  }\n\n  mutecamera = (e) => {\n    const stream = this.video.srcObject.getTracks().filter(track => track.kind === 'video')\n    this.setState(prevState => {\n      if (stream) stream[0].enabled = !prevState.camera\n      return {camera: !prevState.camera}\n    })\n  }\n\n  render() {\n    const muteControls = this.props.showMuteControls && (\n      <div>\n        <i onClick={this.mutemic} style={{ cursor: 'pointer', padding: 5, fontSize: 20, color: this.state.mic && 'white' || 'red' }} class='material-icons'>{this.state.mic && 'mic' || 'mic_off'}</i>\n        <i onClick={this.mutecamera} style={{ cursor: 'pointer', padding: 5, fontSize: 20, color: this.state.camera && 'white' || 'red' }} class='material-icons'>{this.state.camera && 'videocam' || 'videocam_off'}</i>\n      </div>\n    )\n\n    return (\n      <div\n        style={{ ...this.props.frameStyle,  }}\n      >\n       \n        <video\n          id={this.props.id}\n          muted={this.props.muted}\n          autoPlay\n          style={{\n            visibility: this.state.videoVisible && 'visible' || 'hidden',\n            ...this.props.videoStyles,\n          }}\n          // ref={ this.props.videoRef }\n          ref={ (ref) => {this.video = ref }}\n        ></video>\n        {muteControls}\n      </div>\n    )\n  }\n}\n\nexport default Video","import React, { Component } from \"react\";\nimport Video from \"./video\";\n\nclass Videos extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rVideos: [],\n      remoteStreams: [],\n      selectedVideo: null,\n      videoVisible: false,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.remoteStreams !== nextProps.remoteStreams) {\n      const NoOfRemoteStreams = nextProps.remoteStreams.length;\n\n      let selectedVideo = {};\n\n      if (NoOfRemoteStreams === 1)\n        selectedVideo = { selectedVideo: nextProps.remoteStreams[0] };\n      else {\n        selectedVideo =\n          (this.state.selectedVideo &&\n            nextProps.remoteStreams.filter(\n              (stream) => stream.id === this.state.selectedVideo.id\n            )) ||\n          [];\n\n        selectedVideo = selectedVideo.length\n          ? {}\n          : { selectedVideo: nextProps.remoteStreams[NoOfRemoteStreams - 1] };\n      }\n\n      let _rVideos = nextProps.remoteStreams.map((rVideo, index) => {\n        const _videoTrack = rVideo.stream\n          .getTracks()\n          .filter((track) => track.kind === \"video\");\n        // if (_videoTrack.length)\n        //   _videoTrack[0].onmute = () => {\n        //     alert('muted')\n        //   }\n\n        let video = (_videoTrack && (\n          <Video\n            videoMuted={this.videoMuted}\n            videoType=\"remoteVideo\"\n            videoStream={rVideo.stream}\n            frameStyle={{\n              backgroundColor: \"#ffffff12\",\n              maxWidth: 120,\n              maxHeight: 120,\n              borderRadius: 5,\n              float: \"left\",\n              margin: \"0 3px\",\n            }}\n            videoStyles={{\n              objectFit: \"cover\",\n              borderRadius: 5,\n              width: 120,\n              height: 120,\n              maxWidth: 120,\n              maxHeight: 120,\n            }}\n          />\n        )) || <div></div>;\n\n        return (\n          <div\n            id={rVideo.name}\n            onClick={() => this.switchVideo(rVideo)}\n            style={{\n              cursor: \"pointer\",\n              display: \"inline-block\",\n            }}\n            key={index}\n          >\n            {video}\n          </div>\n        );\n      });\n\n      this.setState({\n        remoteStreams: nextProps.remoteStreams,\n        rVideos: _rVideos,\n        ...selectedVideo,\n      });\n    }\n  }\n\n  videoMuted = (rVideo) => {\n    const muteTrack = rVideo.getVideoTracks()[0];\n    const isSelectedVideo = rVideo.id === this.state.selectedVideo.stream.id;\n    if (isSelectedVideo) {\n      this.setState({\n        videoVisible: !muteTrack.muted,\n      });\n    }\n  };\n\n  switchVideo = (_video) => {\n    const muteTrack = _video.stream.getVideoTracks()[0];\n    this.setState({\n      selectedVideo: _video,\n      videoVisible: !muteTrack.muted,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Video\n          videoType=\"previewVideo\"\n          frameStyle={{\n            zIndex: 1,\n            position: \"fixed\",\n            bottom: 0,\n            minWidth: \"100%\",\n            minHeight: \"100%\",\n            backgroundColor: \"black\",\n          }}\n          videoStyles={{\n            minWidth: \"100%\",\n            minHeight: \"100%\",\n            visibility: (this.state.videoVisible && \"visible\") || \"hidden\",\n          }}\n          videoStream={\n            this.state.selectedVideo && this.state.selectedVideo.stream\n          }\n        />\n        <div\n          style={{\n            // zIndex: 3,\n            // position: 'fixed',\n            // padding: '6px 3px',\n            backgroundColor: \"rgba(0,0,0,0.3)\",\n            //maxHeight: 120,\n            top: \"auto\",\n            right: 10,\n            left: 10,\n            bottom: 10,\n            overflowX: \"scroll\",\n            whiteSpace: \"nowrap\",\n          }}\n        >\n          {this.state.rVideos}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Videos;\n","\nimport React, { useState, useEffect, useRef } from 'react'\n\nvar DragDrop = props => {\n  const [bgColor, setBgColor] = useState('transparent')\n\n  const changeBgColor = (state) => {\n    console.log(state)\n    setBgColor(state && 'green' || 'transparent')\n    // setBgColor('green')\n  }\n\n  return (\n    <div style={{\n      backgroundColor: bgColor\n    }} className={props.className}\n      // ref={ref}\n      onDragEnter={(e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        changeBgColor(true)\n        e.dataTransfer.dropEffect = 'copy'\n        console.log('DragEnter', e.dataTransfer.items.length)\n      }}\n      \n      onDragLeave={(e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        changeBgColor(false)\n        console.log('onDragLeave')\n      }}\n\n      onDragOver={(e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        console.log('onDragOver')\n      }}\n\n      onDrop={(e) => { \n        e.preventDefault()\n        e.stopPropagation()\n        changeBgColor(false)\n        console.log(e.dataTransfer.items)\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n          props.sendFiles(e.dataTransfer.files)\n        }\n      }}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nexport default DragDrop","\nimport React, { useState, useEffect, useRef } from 'react'\nimport DragDrop from './dragDrop'\n\nconst Chat = props => {\n  const [message, setMessage] = useState('')\n  const [user, setUser] = useState({ uid: 0, })\n  const [imageZoom, setImageZoom] = useState(false)\n  const [selectedImage, setSelectedImage] = useState('')\n\n  const scrollToBottom = () => {\n    const chat = document.getElementById(\"chatList\");\n    chat.scrollTop = chat.scrollHeight\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n    setUser({ uid: props.user.uid, })\n  }, [props])\n\n  const sendMessage = (msg) => {\n    props.sendMessage(msg);\n    scrollToBottom()\n  }\n\n  const handleSubmit = event => {\n    if (message === '') return\n    event.preventDefault();\n    sendMessage({type:'text', message: { id: user.uid, sender: { uid: user.uid, }, data: { text: message } }})\n    setMessage('')\n  };\n\n  const handleChange = event => {\n    setMessage(event.target.value)\n  }\n\n  const renderMessage = (userType, data) => {\n    console.log('===========', data)\n    const message = data.message\n\n    const msgDiv = data.type === 'text' && (\n      <div className=\"msg\">\n        <p>{message.sender.uid}</p>\n        <div className=\"message\"> {message.data.text}</div>\n      </div>\n    ) || (\n      <div className=\"msg\">\n        <p>{message.sender.uid}</p>\n        <img\n          onClick={() => {\n            setImageZoom(true)\n            setSelectedImage(message.data)\n          }}\n          className=\"message\"\n          style={{\n            width: 200,\n            // height: 100\n            cursor: 'pointer',\n          }}\n          src={message.data} />\n      </div>\n    )\n\n    return (<li className={userType} >{ msgDiv }</li>)\n\n  }\n\n  const showEnlargedImage = (data) => {\n    return (<img\n      src={data}\n      style={{\n        backgroundColor: 'black',\n        position: 'relative',\n        zIndex: 100,\n        display: 'block',\n        cursor: 'pointer',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        padding: 20,\n        borderRadius: 20,\n      }}\n      onClick={() => setImageZoom(false)}\n    />)\n  }\n\n  return (\n    <div>\n      {imageZoom && showEnlargedImage(selectedImage)}\n\n      <div className=\"chatWindow\" style={{\n        zIndex: 10,\n        position: 'absolute',\n        right: 5,\n        top: 190,\n        bottom: 140,\n        width: 350,\n        // height: 650,\n    }}>\n        <ul className=\"chat\" id=\"chatList\">\n          {props.messages.map(data => (\n            <div key={data.id}>\n              {user.uid === data.message.sender.uid ? renderMessage('self', data) : (renderMessage('other', data))}\n            </div>\n          ))}\n        </ul>\n        <DragDrop\n          className=\"chatInputWrapper\"\n          sendFiles={(files) => {\n            const reader = new FileReader()\n            reader.onload = (e) => {\n             \n              const maximumMessageSize = 262118 \n              if (e.target.result.length <= maximumMessageSize)\n                sendMessage({ type: 'image', message: { id: user.uid, sender: { uid: user.uid, }, data: e.target.result } })\n              else\n                alert('Message exceeds Maximum Message Size!')\n            }\n\n            reader.readAsDataURL(files[0])\n          }}\n        >\n          <div>\n            <form onSubmit={handleSubmit}>\n              <input\n                className=\"textarea input\"\n                type=\"text\"\n                placeholder=\"Enter your message...\"\n                onChange={handleChange}\n                value={message}\n              />\n            </form>\n          </div>\n        </DragDrop>\n      </div>\n      </div>\n    )\n}\n\nexport default Chat\n\n\n// reference\n// https://www.freecodecamp.org/news/building-a-modern-chat-application-with-react-js-558896622194/\n","\nimport React, { useState, useEffect, useRef } from 'react'\n\nvar Draggable = props => {\n  const [pressed, setPressed] = useState(false)\n  const [position, setPosition] = useState({x: 0, y: 0})\n  const ref = useRef()\n  \n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.transform = `translate(${position.x}px, ${position.y}px)`\n    }\n  }, [position])\n\n  // Update the current position if mouse is down\n  const onMouseMove = (event) => {\n    if (pressed) {\n      setPosition({\n        x: position.x + event.movementX,\n        y: position.y + event.movementY\n      })\n    }\n  }\n\n  return (\n    <div\n      style={props.style}\n      ref={ ref }\n      onMouseMove={ onMouseMove }\n      onMouseDown={ () => setPressed(true) }\n      onMouseUp={ () => setPressed(false) }>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Draggable","import React, { Component } from \"react\";\n\nimport io from \"socket.io-client\";\n\nimport Video from \"./video\";\nimport Videos from \"./videos\";\n\nimport Chat from \"./chat\";\n\nimport Draggable from \"./draggable\";\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      localStream: null, // used to hold local stream object \n      remoteStream: null, // used to hold remote stream object \n\n      remoteStreams: [], \n      peerConnections: {}, \n      selectedVideo: null,\n\n      status: \"Please wait...\", // initial status\n\n      pc_config: {\n        iceServers: [\n          {\n            urls: \"stun:stun.l.google.com:19302\",\n          },\n        ],\n      },\n\n      sdpConstraints: {\n        mandatory: {\n          OfferToReceiveAudio: true,\n          OfferToReceiveVideo: true,\n        },\n      },\n\n      messages: [],\n      sendChannels: [],\n      disconnected: false,\n    };\n\n    // url\n    this.serviceIP = \"/webrtcPeer\";\n\n    this.socket = null;\n    // this.candidates = []\n  }\n\n  getLocalStream = () => {\n    \n    const success = (stream) => {\n      window.localStream = stream;\n      this.setState({\n        localStream: stream,\n      });\n      this.whoisOnline();\n    };\n\n    const failure = (e) => {\n      console.log(\"getUserMedia Error: \", e);\n    };\n\n    const constraints = {\n      audio: true,\n      video: true,\n      options: {\n        mirror: true,\n      },\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then(success)\n      .catch(failure);\n  };\n\n  whoisOnline = () => {\n    this.sendToPeer(\"onlinePeers\", null, { local: this.socket.id });\n  };\n\n  sendToPeer = (messageType, payload, socketID) => {\n    this.socket.emit(messageType, {\n      socketID,\n      payload,\n    });\n  };\n\n  createPeerConnection = (socketID, callback) => {\n    try {\n      let pc = new RTCPeerConnection(this.state.pc_config);\n\n      // add pc to peerConnections object\n      const peerConnections = { ...this.state.peerConnections, [socketID]: pc };\n      this.setState({\n        peerConnections,\n      });\n\n      pc.onicecandidate = (e) => {\n        if (e.candidate) {\n          this.sendToPeer(\"candidate\", e.candidate, {\n            local: this.socket.id,\n            remote: socketID,\n          });\n        }\n      };\n\n      pc.oniceconnectionstatechange = (e) => {\n      };\n\n      pc.ontrack = (e) => {\n        let _remoteStream = null;\n        let remoteStreams = this.state.remoteStreams;\n        let remoteVideo = {};\n\n        // check if stream already exists in remoteStreams\n        const rVideos = this.state.remoteStreams.filter(\n          (stream) => stream.id === socketID\n        );\n\n        // if it does exist then add track\n        if (rVideos.length) {\n          _remoteStream = rVideos[0].stream;\n          _remoteStream.addTrack(e.track, _remoteStream);\n\n          remoteVideo = {\n            ...rVideos[0],\n            stream: _remoteStream,\n          };\n          remoteStreams = this.state.remoteStreams.map((_remoteVideo) => {\n            return (\n              (_remoteVideo.id === remoteVideo.id && remoteVideo) ||\n              _remoteVideo\n            );\n          });\n        } else {\n          // 3. if not, then create new stream and add track\n          _remoteStream = new MediaStream();\n          _remoteStream.addTrack(e.track, _remoteStream);\n\n          remoteVideo = {\n            id: socketID,\n            name: socketID,\n            stream: _remoteStream,\n          };\n          remoteStreams = [...this.state.remoteStreams, remoteVideo];\n        }\n\n        this.setState((prevState) => {\n          // If we already have a stream in display let it stay the same, otherwise use the latest stream\n          const remoteStream =\n            prevState.remoteStreams.length > 0\n              ? {}\n              : { remoteStream: _remoteStream };\n\n          // get currently selected video\n          let selectedVideo = prevState.remoteStreams.filter(\n            (stream) => stream.id === prevState.selectedVideo.id\n          );\n          // if the video is still in the list, then do nothing, otherwise set to new video stream\n          selectedVideo = selectedVideo.length\n            ? {}\n            : { selectedVideo: remoteVideo };\n\n          return {\n            ...selectedVideo,\n            ...remoteStream,\n            remoteStreams, \n          };\n        });\n      };\n\n      pc.close = () => {\n        // alert('closed')\n        console.log(\"pc closed\");\n      };\n\n      if (this.state.localStream)\n        this.state.localStream.getTracks().forEach((track) => {\n          pc.addTrack(track, this.state.localStream);\n        });\n\n      callback(pc);\n    } catch (e) {\n      console.log(\"Something went wrong! pc not created!!\", e);\n      callback(null);\n    }\n  };\n\n  componentDidMount = () => {\n    this.socket = io.connect(this.serviceIP, {\n      path: \"/io/webrtc\",\n      query: {\n        room: window.location.pathname,\n      },\n    });\n\n    this.socket.on(\"connection-success\", (data) => {\n      this.getLocalStream();\n      // console.log(data.success)\n      const status =\n        data.peerCount > 1\n          ? \"Two peers are connected\"\n          : \"Waiting for other peers to connect\";\n\n      this.setState({\n        status: status,\n        messages: data.messages,\n      });\n    });\n\n    this.socket.on(\"joined-peers\", (data) => {\n      this.setState({\n        status:\n          data.peerCount > 1\n            ? \"Two peers are connected\"\n            : \"Waiting for other peers to connect\",\n      });\n    });\n    this.socket.on(\"peer-disconnected\", (data) => {\n      // close peer-connection with this peer\n      this.state.peerConnections[data.socketID].close();\n\n      // get and stop remote audio and video tracks of the disconnected peer\n      const rVideo = this.state.remoteStreams.filter(\n        (stream) => stream.id === data.socketID\n      );\n      rVideo && this.stopTracks(rVideo[0].stream);\n\n      // filter out the disconnected peer stream\n      const remoteStreams = this.state.remoteStreams.filter(\n        (stream) => stream.id !== data.socketID\n      );\n\n      this.setState((prevState) => {\n        // check if disconnected peer is the selected video and if there still connected peers, then select the first\n        const selectedVideo =\n          prevState.selectedVideo.id === data.socketID && remoteStreams.length\n            ? { selectedVideo: remoteStreams[0] }\n            : null;\n\n        return {  \n          remoteStreams,\n          ...selectedVideo,\n          status:\n            data.peerCount > 1\n              ? \"Two peers are connected\"\n              : \"Waiting for other peers to connect\",\n        };\n      });\n    });\n\n    this.socket.on(\"online-peer\", (socketID) => {\n      // Create new pc\n      this.createPeerConnection(socketID, (pc) => {\n        //Create Offer\n        if (pc) {\n          // Send Channel\n          const handleSendChannelStatusChange = (event) => {\n            console.log(\n              \"send channel status: \" + this.state.sendChannels[0].readyState\n            );\n          };\n\n          const sendChannel = pc.createDataChannel(\"sendChannel\");\n          sendChannel.onopen = handleSendChannelStatusChange;\n          sendChannel.onclose = handleSendChannelStatusChange;\n\n          this.setState((prevState) => {\n            return {\n              sendChannels: [...prevState.sendChannels, sendChannel],\n            };\n          });\n\n          // Receive Channels\n          const handleReceiveMessage = (event) => {\n            const message = JSON.parse(event.data);\n            // console.log(message)\n            this.setState((prevState) => {\n              return {\n                messages: [...prevState.messages, message],\n              };\n            });\n          };\n\n          const handleReceiveChannelStatusChange = (event) => {\n            if (this.receiveChannel) {\n              console.log(\n                \"receive channel's status has changed to \" +\n                  this.receiveChannel.readyState\n              );\n            }\n          };\n\n          const receiveChannelCallback = (event) => {\n            const receiveChannel = event.channel;\n            receiveChannel.onmessage = handleReceiveMessage;\n            receiveChannel.onopen = handleReceiveChannelStatusChange;\n            receiveChannel.onclose = handleReceiveChannelStatusChange;\n          };\n\n          pc.ondatachannel = receiveChannelCallback;\n\n          pc.createOffer(this.state.sdpConstraints).then((sdp) => {\n            pc.setLocalDescription(sdp);\n\n            this.sendToPeer(\"offer\", sdp, {\n              local: this.socket.id,\n              remote: socketID,\n            });\n          });\n        }\n      });\n    });\n\n    this.socket.on(\"offer\", (data) => {\n      this.createPeerConnection(data.socketID, (pc) => {\n        pc.addStream(this.state.localStream);\n\n        // Send Channel\n        const handleSendChannelStatusChange = (event) => {\n          console.log(\n            \"send channel status: \" + this.state.sendChannels[0].readyState\n          );\n        };\n\n        const sendChannel = pc.createDataChannel(\"sendChannel\");\n        sendChannel.onopen = handleSendChannelStatusChange;\n        sendChannel.onclose = handleSendChannelStatusChange;\n\n        this.setState((prevState) => {\n          return {\n            sendChannels: [...prevState.sendChannels, sendChannel],\n          };\n        });\n\n        // Receive Channels\n        const handleReceiveMessage = (event) => {\n          const message = JSON.parse(event.data);\n          // console.log(message)\n          this.setState((prevState) => {\n            return {\n              messages: [...prevState.messages, message],\n            };\n          });\n        };\n\n        const handleReceiveChannelStatusChange = (event) => {\n          if (this.receiveChannel) {\n            console.log(\n              \"receive channel's status has changed to \" +\n                this.receiveChannel.readyState\n            );\n          }\n        };\n\n        const receiveChannelCallback = (event) => {\n          const receiveChannel = event.channel;\n          receiveChannel.onmessage = handleReceiveMessage;\n          receiveChannel.onopen = handleReceiveChannelStatusChange;\n          receiveChannel.onclose = handleReceiveChannelStatusChange;\n        };\n\n        pc.ondatachannel = receiveChannelCallback;\n\n        pc.setRemoteDescription(new RTCSessionDescription(data.sdp)).then(\n          () => {\n            // 2. Create Answer\n            pc.createAnswer(this.state.sdpConstraints).then((sdp) => {\n              pc.setLocalDescription(sdp);\n\n              this.sendToPeer(\"answer\", sdp, {\n                local: this.socket.id,\n                remote: data.socketID,\n              });\n            });\n          }\n        );\n      });\n    });\n\n    this.socket.on(\"answer\", (data) => {\n      // get remote's peerConnection\n      const pc = this.state.peerConnections[data.socketID];\n      // console.log(data.sdp)\n      pc.setRemoteDescription(\n        new RTCSessionDescription(data.sdp)\n      ).then(() => {});\n    });\n\n    this.socket.on(\"candidate\", (data) => {\n      // get remote's peerConnection\n      const pc = this.state.peerConnections[data.socketID];\n\n      if (pc) pc.addIceCandidate(new RTCIceCandidate(data.candidate));\n    });\n    \n    // this.pc.onicecandidate = (e) => {\n    //   // send the candidates to the remote peer\n    //   // see addCandidate below to be triggered on the remote peer\n    //   if (e.candidate) {\n    //     // console.log(JSON.stringify(e.candidate))\n    //     this.sendToPeer('candidate', e.candidate)\n    //   }\n    // }\n  };\n\n  disconnectSocket = (socketToDisconnect) => {\n    this.sendToPeer(\"socket-to-disconnect\", null, {\n      local: this.socket.id,\n      remote: socketToDisconnect,\n    });\n  };\n\n  mutecamera = (e) => {\n    const stream = this.video.srcObject.getTracks().filter(track => track.kind === 'video')\n    this.setState(prevState => {\n      if (stream) stream[0].enabled = !prevState.camera\n      return {camera: !prevState.camera}\n    })\n  }\n\n  switchVideo = (_video) => {\n    // console.log(_video)\n    this.setState({\n      selectedVideo: _video,\n    });\n  };\n  stopTracks = (stream) => {\n    stream.getTracks().forEach((track) => track.stop());\n  };\n\n  render() {\n    const {\n      status,\n      messages,\n      disconnected,\n      localStream,\n      peerConnections,\n      remoteStreams,\n    } = this.state;\n\n    if (disconnected) {\n      // disconnect socket\n      this.socket.close();\n      // stop local audio & video tracks\n      this.stopTracks(localStream);\n\n      // stop all remote audio & video tracks\n      remoteStreams.forEach((rVideo) => this.stopTracks(rVideo.stream));\n\n      // stop all remote peerconnections\n      peerConnections &&\n        Object.values(peerConnections).forEach((pc) => pc.close());\n        this.props.history.push(\"/\");\n      return <div>You have successfully Disconnected</div>;\n    }\n\n    const statusText = (\n      <div style={{ color: \"yellow\", padding: 5 }}>{status}</div>\n    );\n\n    return (\n      <div>\n        <Draggable\n          style={{\n            zIndex: 101,\n            position: \"absolute\",\n            right: 0,\n            cursor: \"move\",\n          }}\n        >\n          <Video\n            videoType=\"localVideo\"\n            videoStyles={{\n              width: 200,\n            }}\n            frameStyle={{\n              width: 200,\n              margin: 5,\n              borderRadius: 5,\n              backgroundColor: \"black\",\n            }}\n            showMuteControls={true}\n            // ref={this.localVideoref}\n            videoStream={localStream}\n            autoPlay\n            muted\n          ></Video>\n        </Draggable>\n        {/* <Video\n          frameStyle={{\n            zIndex: 1,\n            position: 'fixed',\n            bottom: 0,\n            minWidth: '100%', minHeight: '100%',\n            backgroundColor: 'black'\n          }}\n         */}\n        <br />\n        <div\n          style={{\n            zIndex: 3,\n            position: \"absolute\",\n            // margin: 10,\n          }}\n        >\n          <div\n            style={{\n              margin: 10,\n              backgroundColor: \"#cdc4ff4f\",\n              padding: 10,\n              borderRadius: 5,\n            }}\n          >\n            {statusText}\n          </div>\n        </div>\n\n        <div\n          style={{\n            zIndex: 2,\n            margin: 10,\n            backgroundColor: \"white\",\n            padding: 10,\n            borderRadius: 50,\n            position: \"absolute\",\n            bottom: 0,\n            left: \"45%\",\n          }}\n        >\n          <IconButton\n            onClick={(e) => {\n              this.setState({ disconnected: true });\n              var alertResponse = window.confirm(\n                \"Are you sure want to END CALL ? \"\n              );\n              if (alertResponse) {\n                this.mutecamera(e)\n                this.setState({ disconnected: true });\n                // this.props.history.push(\"/\");\n              }\n            }}\n          >\n            <CallEndIcon\n              style={{\n                color: \"red\",\n                fontSize: \"36px\",\n              }}\n            ></CallEndIcon>\n          </IconButton>\n        </div>\n\n        <div>\n          <Videos\n            switchVideo={this.switchVideo}\n            remoteStreams={remoteStreams}\n          ></Videos>\n        </div>\n        <br />\n\n        <Chat\n          user={{\n            uid: (this.socket && this.socket.id) || \"\",\n          }}\n          messages={messages}\n          sendMessage={(message) => {\n            this.setState((prevState) => {\n              return { messages: [...prevState.messages, message] };\n            });\n            this.state.sendChannels.map((sendChannel) => {\n              sendChannel.readyState === \"open\" &&\n                sendChannel.send(JSON.stringify(message));\n            });\n            this.sendToPeer(\"new-message\", JSON.stringify(message), {\n              local: this.socket.id,\n            });\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nclass FirstPage extends Component {\n  on_click = () => {\n    this.props.history.push(\"/home\");\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <div\n            style={{\n              overflow: \"hidden\",\n              backgroundColor: \"black\",\n              position: \"fixed\",\n              top: 0,\n              width: \"100%\",\n              overflow: \"auto\",\n            }}\n          >\n            <h2\n              style={{\n                color: \"white\",\n                marginLeft: 30,\n                margin: \"14px\",\n              }}\n            >\n              P2P VIDEO CALL\n            </h2>\n          </div>\n          <div>\n            <img\n              style={{\n                width: \"100vw\",\n                height: \"100vh\",\n                backgroundSize: \"100% 100%\",\n                backgroundRepeat: \"no-repeat\",\n                position: \"static\",\n              }}\n              src={require(\"./../components/video-bg.jpg\")}\n              alt=\"pic\"\n            />\n          </div>\n        </div>\n\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: 30,\n            left: \"40%\",\n          }}\n        >\n          {/* <button style={{}} onClick={this.on_click}>\n            Enter\n          </button> */}\n          <Button\n            style={{\n              fontSize: \"20px\",\n            }}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<VideocamIcon />}\n            onClick={this.on_click}\n          >\n            Start Video Call\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FirstPage;\n","import React, { Component } from \"react\";\nimport Home from \"./components/home\";\nimport FirstPage from \"./components/first-page\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        {/* <Home />\n        <FirstPage /> */}\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={FirstPage} />\n            <Route exact path=\"/home\" component={Home} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}